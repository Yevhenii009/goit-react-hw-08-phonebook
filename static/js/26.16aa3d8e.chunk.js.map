{"version":3,"file":"static/js/26.16aa3d8e.chunk.js","mappings":"yOACA,EAA8B,kCAA9B,EAA4E,gCAA5E,EAAmH,2BAAnH,EAA+J,qCAA/J,EAAgN,gCAAhN,EAAwP,4B,SCM3OA,EAAe,WAC1B,IAAMC,GAAWC,EAAAA,EAAAA,MAaXC,GAAaC,EAAAA,EAAAA,IAAO,CACxBC,MAAMC,EAAAA,EAAAA,MAASC,WACfC,OAAOF,EAAAA,EAAAA,MAASE,MAAM,yBAAyBD,WAC/CE,UAAUH,EAAAA,EAAAA,MAASI,IAAI,GAAGH,aAE5B,OACE,iBAAKI,UAAWC,EAAhB,WACE,eAAID,UAAWC,EAAf,gCACA,SAAC,KAAD,CACEC,cAVgB,CAAER,KAAM,GAAIG,MAAO,GAAIC,SAAU,IAWjDK,SAtBe,SAACC,EAAD,GAA4B,IAAjBC,EAAgB,EAAhBA,UAC9Bf,GACEgB,EAAAA,EAAAA,IAAS,CACPZ,KAAMU,EAAOV,KACbG,MAAOO,EAAOP,MACdC,SAAUM,EAAON,YAGrBO,GACD,EAcKE,iBAAkBf,EAHpB,UAKE,UAAC,KAAD,CAAMQ,UAAWC,EAAUO,aAAa,MAAxC,WACE,iBAAKR,UAAWC,EAAhB,WACE,SAAC,KAAD,CACED,UAAWC,EACXQ,KAAK,OACLf,KAAK,OACLgB,YAAY,UAEd,SAAC,KAAD,CAAcV,UAAWC,EAAWU,UAAU,MAAMjB,KAAK,aAE3D,iBAAKM,UAAWC,EAAhB,WACE,SAAC,KAAD,CACED,UAAWC,EACXQ,KAAK,QACLf,KAAK,QACLgB,YAAY,WAEd,SAAC,KAAD,CAAcV,UAAWC,EAAWU,UAAU,MAAMjB,KAAK,cAE3D,iBAAKM,UAAWC,EAAhB,WACE,SAAC,KAAD,CACED,UAAWC,EACXQ,KAAK,WACLf,KAAK,WACLgB,YAAY,cAEd,SAAC,KAAD,CACEV,UAAWC,EACXU,UAAU,MACVjB,KAAK,iBAGT,SAACkB,EAAA,EAAD,CAAQH,KAAK,SAAb,6BAKT,ECrEc,SAASI,IACtB,OAAO,SAACxB,EAAD,GACR,C","sources":["webpack://react-homework-template/./src/components/RegisterForm/RegisterForm.module.css?a5d4","components/RegisterForm/RegisterForm.jsx","pages/Register.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"formWrapper\":\"RegisterForm_formWrapper__5v4BM\",\"formTitle\":\"RegisterForm_formTitle__YlpKI\",\"form\":\"RegisterForm_form__Tv43W\",\"formInputGroup\":\"RegisterForm_formInputGroup__4MFxN\",\"formInput\":\"RegisterForm_formInput__Rum0L\",\"error\":\"RegisterForm_error__yDHjz\"};","import { useDispatch } from 'react-redux';\nimport { register } from 'redux/auth/operations';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport { object, string } from 'yup';\nimport { Button } from 'components/Button/Button';\nimport css from './RegisterForm.module.css';\n\nexport const RegisterForm = () => {\n  const dispatch = useDispatch();\n  const handleSubmit = (values, { resetForm }) => {\n    dispatch(\n      register({\n        name: values.name,\n        email: values.email,\n        password: values.password,\n      })\n    );\n    resetForm();\n  };\n\n  const initialValues = { name: '', email: '', password: '' };\n  const userSchema = object({\n    name: string().required(),\n    email: string().email('Invalid email address').required(),\n    password: string().min(5).required(),\n  });\n  return (\n    <div className={css.formWrapper}>\n      <h2 className={css.formTitle}>Registration form</h2>\n      <Formik\n        initialValues={initialValues}\n        onSubmit={handleSubmit}\n        validationSchema={userSchema}\n      >\n        <Form className={css.form} autoComplete=\"off\">\n          <div className={css.formInputGroup}>\n            <Field\n              className={css.formInput}\n              type=\"text\"\n              name=\"name\"\n              placeholder=\"name\"\n            />\n            <ErrorMessage className={css.error} component=\"div\" name=\"name\" />\n          </div>\n          <div className={css.formInputGroup}>\n            <Field\n              className={css.formInput}\n              type=\"email\"\n              name=\"email\"\n              placeholder=\"email\"\n            />\n            <ErrorMessage className={css.error} component=\"div\" name=\"email\" />\n          </div>\n          <div className={css.formInputGroup}>\n            <Field\n              className={css.formInput}\n              type=\"password\"\n              name=\"password\"\n              placeholder=\"password\"\n            />\n            <ErrorMessage\n              className={css.error}\n              component=\"div\"\n              name=\"password\"\n            />\n          </div>\n          <Button type=\"submit\">Register</Button>\n        </Form>\n      </Formik>\n    </div>\n  );\n};","import { RegisterForm } from 'components/RegisterForm/RegisterForm';\n\nexport default function Register() {\n  return <RegisterForm />;\n};"],"names":["RegisterForm","dispatch","useDispatch","userSchema","object","name","string","required","email","password","min","className","css","initialValues","onSubmit","values","resetForm","register","validationSchema","autoComplete","type","placeholder","component","Button","Register"],"sourceRoot":""}